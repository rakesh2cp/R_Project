import re
import numpy as np
import pandas as pd
from datetime import datetime
import collections
#import seaborn as sns
#import wordcloud
from subprocess import check_output
import matplotlib.pyplot as plt

%matplotlib inline

file = open('WhatsApp_Chat.txt')
chats = file.readlines()
file.close()

formatedChat = []
index = 0

for x in range(len(chats)):
    if(re.match('^[0-9]*?/[0-9]*?/[0-9]{2}',chats[x])):
        #print(type(chats[x]))
        formatedChat.append(str(chats[x]).lower)
        index = len(formatedChat) - 1
        #print(type(x))
    else:
        #print(formatedChat[index])
        formatedChat[index] = formatedChat[index] + chats[x]


msglst = []
#print(formatedChat)
for x in formatedChat:
    split = x.split(' - ')
    #print(len(split))
    if(len(split) == 2):

        #msg = (datetime.strptime(split[0], '%d/%m/%Y, %I:%M %p'),split[1],split[2])
        time = split[0]
        #print(split[0])
        rest = " - ".join(split[1:])
        msg = (datetime.strptime(split[0], '%d/%m/%Y, %I:%M %p'), rest.split(": ")[0],": ".join(rest.split(": ")[1:]))
        msglst.append(msg)


df = pd.DataFrame(msglst,columns=["TimeStamp","Sender","Msg"])
df.replace(['<image omitted>\n','<video omitted>\n'],["Image","video"],inplace=True)
df['Msg'] = df['Msg'].str.replace("=",'')
df.head()
df_org = df

mc_filter = ['MC','mc','well','not well','fever','down']
df_mc = df[df['Msg'].str.contains("MC|mc|fever|not|Not|down|Down|pain|Pain|cold|medical")]
df_late = df[df['Msg'].str.contains("late|Late")]
df_wfh = df[df['Msg'].str.contains("home|Home|login|Login")]
print(df_mc.shape)
print(df_late.shape)
print(df_wfh.shape)

# MC
dg_mc_grp = df_mc[['Sender']].groupby(['Sender']).size().reset_index(name='counts')
dg_mc_grp.sort_values(['counts'], ascending=False).plot(kind='bar',x='Sender',y='counts')
plt.show()
#dg_mc_grp.plot(kind='bar',x='Sender',y='counts')

# Late
df_late_grp = df_late[['Sender']].groupby(['Sender']).size().reset_index(name='counts')
df_late_grp.sort_values(['counts'],ascending=False).plot(kind='bar',x='Sender',y='counts')

df_wfh_grp = df_wfh[['Sender']].groupby(['Sender']).size().reset_index(name='counts')
df_wfh_grp.sort_values(['counts'],ascending=False).plot(kind='bar',x='Sender',y='counts')
